Curso - Aprenda o que são Estrutura de Dados e Algoritmo



Capítulo 1 - Conceitos iniciais sobre estrutura de dados, arrays e registro



Capítulo 1 - Aula 1 - O que é estrutura de dados


* Estrutura de Dados é uma estrutura organizada de dados na memória de um computador ou em qualquer dispositivo de armazenamento, de forma que os dados possam ser utilizados de forma correta.

* Essas estruturas encontram muitas aplicações no desenvolvimento de sistemas, sendo que algumas são altamente especializadas e utilizadas em tarefas específicas.

* Usando as estruturas adequadas através de algoritmos, podemos trabalhar com uma grande quantidade de dados , como aplicações em bancos de dados ou serviços de busca.

* Um algoritmo é um conjunto de instruções estruturadas e ordenadas, seu objetivo é realizar uma tarefa ou operação específica.

* Os algoritmos são utilizados para manipular dados nas estruturas de várias formas, como por exemplo: inserir, excluir, procurar e ordenar dados.

* Em uma estrutura de dados devemos saber como realizar um determinado conjunto de operações básicas, como por exemplo:

	* Inserir Dados;
	* Excluir Dados;
	* Localizar um elemento;
	* Percorrer todos os itens constituintes da estrutura para visualização;
	* Classificar, que se resume em colocar os itens de dados em uma determinada ordem (numérica, alfabética, etc.);

* Principais estruturas de dados:
	* Vetores e Matrizes (também chamados de Arrays)
	* Registro
	* Lista
	* Pilha
	* Fila
	* Árvore
	* Tabela Hash
	* Grafos



Capítulo 1 - Aula 2 - Vetores e matrizes


* Vetores e Matrizes ou Arrays são estruturas de dados simples que podem auxiliar quando há muitas variáveis do mesmo tipo em um algoritmo.

* Em um determinado algoritmo em que temos vários dados de um mesmo tipo, em vez de declarar variável por variável, nós podemos usar uma array. Por exemplo, temos 5 valores inteiros, em vez de declarar variável por variável, podemos fazer isso em uma array (uma única variável com 5 elementos). 

* Vetor ou array uni-dimensional é uma variável que armazena várias variáveis do mesmo tipo.

* O vetor é uma estrutura de dados indexada (que possui índices de 0 até onde o programador quiser), que pode armazenas uma determinada quantidade de valores do mesmo tipo.

* O índice começa no 0. Desta forma, um vetor de 5 posições vai do 0 até o 4.

* Exemplo de como declarar um vetor:
	inteiro numeros[] = {39, 45, 54, 55}

	Console.WriteLine(numeros[3])// vai aparecer 55
	
	Para varrer um vetor a gente pode colocar um laço for que vai passar por todos os índices.

* Matriz ou array-multidimensional é um vetor de vetores.

* Uma matriz pe um vetor que possui duas ou mais dimensões.

* As matrizes possuem dados em colunas e linhas.



Capítulo 1 - Aula 3 - O que são registros


* Um REGISTRO é uma estrutura que fornece um formato especializado para armazenar informações em memória. 

* Enquanto Arrays nos permitem armazenar vários dados de um único tipo de dados, o recurso de Registro nos permite armazenar mais de um tipo de dado. 

* Em um registro é possível armazenar uma string, um int, uma char, etc. Pode ter qualquer tipo de dado.

* Um registro é composto por campos que especificam cada uma das informações que o compõem.

* Exemplo: campos que constituem o registro de um cliente:
	CPF:
	Nome:
	Endereço:
	Contato:

* Toda estrutura de registro tem um nome (ex: livro), e seus campos podem ser acessados por meio do iso do operador ponto ".". Por exemplo, para acessar o preço de um livro, poderíamos utilizar a seguinte declaração:
	livro.preco



Capítulo 2 - Entenda o que são Listas, Pilhas e Filas



Capítulo 2 - Aula 1 - O que são listas


* Estruturas de Dados do tipo Lista armazena dados de um determinado tipo em uma ordem específica. 

* A diferença entre listas e arrays é a de que as listas possuem tamanho ajustável, enquanto arrays possuem tamanho fixo. 

* A lista você não tem a necessidade de iniciá-la com um valor fixo, diferente do array que você tem que determinar quantos "espaços" ele vai ter.

* Existem dois tipos de listas:

	* Lista Ligada: existem os nós onde cada um dos nós conhece o valor que está sendo armazenado em seu interior além de conhecer o elemento posterior a ele: or isso ela é chamada de "lista ligada", pois os nós são amarrados com essa indicação de qual é o próximo nó.
 
	* Duplamente Ligadas: a listas duplamente ligadas constituem uma variação dos listas ligadas. A grande diferença das listas duplamente ligadas para as listas ligadas é que elas são bidirecionais. Vimos que, naturalmente, não conseguimos "andar para trás" em listas ligadas, pois os nós de uma lista ligada sabem somente quem é o próximo elemento. Nas listas duplamente ligadas, os nós sabem quem é o próximo elemento e também quem é o elemento anterior, o que permite a navegação reversa.



Capítulo 2 - Aula 2 - O que são pilhas


* Uma pilha é uma estrutura de dados que serve como uma coleção de elementos e permite o acesso a somente um item de dados.

* O acesso aos itens de uma pilha é restrito - somente um item pode ser lido ou removido por vez. 

* Em algumas nomenclaturas a pilha é chamada de STACK.

* Tipos de Pilhas:
	
	* LIFO ou UEPS: A estrutura do tipo Pilha LIFO (Last in First Out) ou UEPS (Último que Entra Primeiro que Sai), apresenta o seguinte critério: o primeiro elemento a ser retirado é o último que tiver sido inserido. 

	* FIFO ou PEPS:	A estrutura do tipo Pilha FIFO (First In First Out) ou PEPS (Primeiro que Entra Primeiro que Sai) apresenta o seguinte critério: o primeiro elemento a ser retirado é o primeiro que tiver sido inserido. 



Capítulo 2 - Aula 3 - O que são filas


* A estrutura do tipo Fila admite remoção de elementos e inserção de novos sujeita às seguinte regra de operação:
	
	* O elemento removido é o que está na estrutura há mais tempo ou seja, o primeiro objeto inserido na fila é também o primeiro a ser removido seguindo o conceito FIFO.



Capítulo 3 - Estrutura de dados de tipo Árvore, Tabela Hash e Grafos



Capítulo 3 - Aula 1 - O que são árvores


* A Árvore é uma estrutura de dados que organiza seus elementos de forma hierárquica, onde existe um elemento que fica no topo da árvore, chamado de raiz e existem os elementos subordinados a ele, que são chamados de nós ou folhas. 

* Em uma estrutura de árvore nós temos elementos pais e filhos. Com isso nós podemos organizar nossa busca sempre para o lado que indica ser o possível para a existência do que queremos achar. 



Capítulo 3 - Aula 2 - O que são Tabelas Hash


* Tabela Hash também é conhecida como Tabela de Espalhamento ou Dispersão..

* É uma estrutura de dados especial que associa chaves de pesquisa a valores.

* Uma tabela hash é uma generalização da ideia de array, porém utiliza uma função denominada Hashing para espalhar os elementos, fazendo com que os mesmos fiquem de forma não ordenada dentro do "array" que define a tabela.

* Por que espalhar? 

	* A tabela hash permite a associação de "valores" a "chaves"

	* Valores: é a posição ou índice onde o elemento se encontra. 

	* Chave: parte da informação que compõem o elemento a ser manipulado.

	* Na tabela hash eu não chamo o elemento apenas pelo valor, mas pelo valor e chave, ou chave e valor.  

	* Espalhar facilita a busca na estrutura de dados, pois a partir de uma chave podemos acessar de forma rápida uma posição do "array".



Capítulo 3 - Aula 3 - O que são grafos


* Grafos são estruturas que permitem programar a relação entre objetos.

* Os objetos são vértices ou "nós" do grafo

* Os relacionamentos são arestas.

* Os grafos permitem fazer qualquer tipo de estrutura e qualquer tipo de busca.

* Não é linear. O relacionamento pode acontecer em qualquer direção.

* São usadas para jogos, inteligência Artificial ou buscas avançadas.