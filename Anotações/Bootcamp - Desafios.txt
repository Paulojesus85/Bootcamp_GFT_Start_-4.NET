Desafios de código:

Desafio
Pedro trabalha sempre até tarde todos os dias, com isso tem pouco tempo tempo para as tarefas domésticas. Para economizar tempo ele faz a lista de compras do supermercado em um aplicativo e costuma anotar cada item na mesma hora que percebe a falta dele em casa.

O problema é que o aplicativo não exclui itens duplicados, como Pedro anota o mesmo item mais de uma vez e a lista acaba ficando extensa. Sua tarefa é melhorar o aplicativo de notas desenvolvendo um código que exclua os itens duplicados da lista de compras e que os ordene alfabeticamente.

Entrada
A primeira linha de entrada contém um inteiro N (N < 100) com a quantidade de casos de teste que vem a seguir, ou melhor, a quantidade de listas de compras para organizar. Cada lista de compra consiste de uma única linha que contém de 1 a 1000 itens ou palavras compostas apenas de letras minúsculas (de 1 a 20 letras), sem acentos e separadas por um espaço.

Saída
A saída contém N linhas, cada uma representando uma lista de compra, sem os itens repetidos e em ordem alfabética.

Exemplo de Entrada	
2
carne laranja suco picles laranja picles
laranja pera laranja pera pera

Exemplo de Saída
carne laranja picles suco
laranja pera

-----------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;

class ShoppingInTheMarket
{
 public static void Main(string[] args)
 {
  int Attempt = int.Parse(Console.ReadLine());
  
  for (int i = 0; i < Attempt; i++) 
  {
    List<string> Shopping = new List<String>(Console.ReadLine().Split(' '));
    List<string> newList = Shopping.Distinct().ToList();

    newList.Sort();
  
  foreach (string item in newList) 
  {
    Console.Write($"{item} ");
  }
    
    Console.WriteLine(" ");
  }
 }
}


////////////////////////////////////////////

Leia 3 valores reais (A, B e C) e verifique se eles formam ou não um triângulo. Em caso positivo, calcule o perímetro do triângulo (soma de todos os lados) e apresente a mensagem:

Perimetro = XX.X

Em caso negativo, calcule a área do trapézio que tem A e B como base e C como altura, mostrando a mensagem:

Area = XX.X

Fórmula da área de um trapézio: AREA = ((A + B) x C) / 2

Entrada
A entrada contém três valores reais.

Saída
O resultado deve ser apresentado com uma casa decimal.

Exemplo de Entrada	
6.0 4.0 2.0

Exemplo de Saída
Area = 10.0

Exemplo de Entrada
6.0 4.0 2.1

Exemplo de Saída
Perimetro = 12.1


using System; 

class myClass 
{

    static void Main(string[] args) 
    { 
      double a, b, c, area, perimeter;
      string[] valor = Console.ReadLine().Split();
      a = Convert.ToDouble(valor[0]);
      b = Convert.ToDouble(valor[1]);
      c = Convert.ToDouble(valor[2]);
            
      perimeter = a + b + c;

      if(a + b > c && b + c > a && c + a > b)
      {
        Console.WriteLine("Perimetro = {0:0.0}",perimeter);

      }
      else
      {
        area = ((a + b)*c)/2;

        Console.WriteLine("Area = {0:0.0}",area);

      } 
    }
}

----------------------------------------------


Desafio
Faça a leitura de um valor inteiro. Em seguida, calcule o menor número de notas possíveis (cédulas) onde o valor pode ser decomposto. As notas que você deve considerar são de 100, 50, 20, 10, 5, 2 e 1. Na sequência mostre o valor lido e a relação de notas necessárias.

Entrada
Você receberá um valor inteiro N (0 < N < 1000000).

Saída
Exiba o valor lido e a quantidade mínima de notas de cada tipo necessárias, seguindo o exemplo de saída abaixo. Após cada linha deve ser imprimido o fim de linha.

Exemplo de Entrada	
576

Exemplo de Saída
576
5 nota(s) de R$ 100,00
1 nota(s) de R$ 50,00
1 nota(s) de R$ 20,00
0 nota(s) de R$ 10,00
1 nota(s) de R$ 5,00
0 nota(s) de R$ 2,00
1 nota(s) de R$ 1,00

Exemplo de Entrada
11257

Exemplo de Saída
11257
112 nota(s) de R$ 100,00
1 nota(s) de R$ 50,00
0 nota(s) de R$ 20,00
0 nota(s) de R$ 10,00
1 nota(s) de R$ 5,00
1 nota(s) de R$ 2,00
0 nota(s) de R$ 1,00

using System;

namespace DIO
{
  class Program
  {
    static void Main(string[] args)
    {
      int r, money, quotient, ten, remainder,ten2,un,un1,dz,dz1,uz,uz1,ux,ux1,dx,dx1;

      r = int.Parse(Console.ReadLine());
      Console.WriteLine(r);

      remainder = r;

      money = 100;
      quotient = remainder / 100;
      Console.WriteLine($"{quotient} nota(s) de R$ {money},00");
      
      ten = r-quotient * 100;
      ten2 = ten / 50;
      Console.WriteLine($"{ten2} nota(s) de R$ 50,00");
      
      un = r-(quotient * 100 + ten2 * 50);
      un1 = un / 20;
      Console.WriteLine($"{un1} nota(s) de R$ 20,00");
      
      dz = r-(quotient * 100 + ten2 * 50 + un1 * 20);
      dz1 = dz / 10;
      Console.WriteLine($"{dz1} nota(s) de R$ 10,00");
      
      uz = r-(quotient * 100 + ten2 * 50 + un1 * 20 + dz1 * 10);
      uz1 = uz/5;
      Console.WriteLine($"{uz1} nota(s) de R$ 5,00");
      
      ux = r-(quotient * 100 + ten2 * 50 + un1 * 20 + dz1 * 10 + uz1 * 5);
      ux1 = ux / 2;
      Console.WriteLine($"{ux1} nota(s) de R$ 2,00");
      
      dx = r-(quotient * 100 + ten2 * 50 + un1 * 20 + dz1 * 10 + uz1 * 5 + ux1 * 2);
      Console.WriteLine($"{dx} nota(s) de R$ 1,00");
    }
  }
}